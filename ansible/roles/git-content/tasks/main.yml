- name: Get gitea token
  ansible.builtin.shell: 
    cmd: cat /home/{{ USERNAME }}/just_gitea_token.txt
  register: GITEA_USER_TOKEN

- name: Check to see if /home/{{ USERNAME }}/git/petclinic exists
  ansible.builtin.stat: 
    path: /home/{{ USERNAME }}/git/petclinic
  register: petclinic_repo

- name: Checkout empty repos
  ansible.builtin.shell: |
    cd /home/{{ USERNAME }}/git
    curl   -X POST "http://git.example.com:3000/api/v1/user/repos"   -H "accept: application/json"   -H "Authorization: token {{ GITEA_USER_TOKEN.stdout }}"   -H "Content-Type: application/json"   -d "{\"name\": \"{{ item }}\"}" -i
    git clone http://lab-user:{{ GITEA_USER_TOKEN.stdout }}@server.example.com:3000/lab-user/{{ item }}.git
  loop:
    - rhel9-soe
    - rhel10-soe
    - petclinic
  ignore_errors: yes # in case the repo already exists
  when: not petclinic_repo.stat.exists
  
- name: Copy git content across
  ansible.builtin.copy:
    src: files/git/
    dest: "/home/{{ USERNAME }}/git/"
    owner: "{{ USERNAME }}"
    group: "{{ USERNAME_GROUP }}"

- name: Check In updates
  ansible.builtin.shell: |
    cd /home/{{ USERNAME }}/git/{{ item }}
    git remote set-url origin http://{{ USERNAME }}:{{ GITEA_USER_TOKEN.stdout }}@git.example.com:3000/lab-user/{{ item }}.git
#    git add .
#    git commit -m "Ansible Commit"  
#    git push
  loop:
    - rhel9-soe
    - rhel10-soe
    - petclinic
  ignore_errors: yes # in case there are no changes to commit
  
